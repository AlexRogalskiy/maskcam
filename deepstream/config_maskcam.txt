################################################################################
# Copyright (c) 2019-2020, NVIDIA CORPORATION. All rights reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.
################################################################################

# Following properties are mandatory when engine files are not specified:
#   int8-calib-file(Only in INT8), model-file-format
#   Caffemodel mandatory properties: model-file, proto-file, output-blob-names
#   UFF: uff-file, input-dims, uff-input-blob-name, output-blob-names
#   ONNX: onnx-file
#
# Mandatory properties for detectors:
#   num-detected-classes
#
# Optional properties for detectors:
#   cluster-mode(Default=Group Rectangles), interval(Primary mode only, Default=0)
#   custom-lib-path
#   parse-bbox-func-name
#
# Mandatory properties for classifiers:
#   classifier-threshold, is-classifier
#
# Optional properties for classifiers:
#   classifier-async-mode(Secondary mode only, Default=false)
#
# Optional properties in secondary mode:
#   operate-on-gie-id(Default=0), operate-on-class-ids(Defaults to all classes),
#   input-object-min-width, input-object-min-height, input-object-max-width,
#   input-object-max-height
#
# Following properties are always recommended:
#   batch-size(Default=1)
#
# Other optional properties:
#   net-scale-factor(Default=1), network-mode(Default=0 i.e FP32),
#   model-color-format(Default=0 i.e. RGB) model-engine-file, labelfile-path,
#   mean-file, gie-unique-id(Default=0), offsets, process-mode (Default=1 i.e. primary),
#   custom-lib-path, network-mode(Default=0 i.e FP32)
#
# The values in the config file are overridden by values set through GObject
# properties.

[maskcam]
default-input=v4l2:///dev/video0

# Run utils/gst_capabilities.sh and find some combination with framerate <= 14 fps
camera-framerate=10/1

udp-port=5400
streaming-port=8554
streaming-clock-rate=90000
# Supported: MP4, H264, H265
# Recommended H264 for stability on video save
codec=H264
mqtt-broker-port=1883
statistics-period=20
file-temp-dir=/dev/shm
fileserver-enabled=1

# Note these will be deleted on system reboot
fileserver-dir=/tmp/saved_videos


[property]
interval=0
gpu-id=0
# Was: 
net-scale-factor=0.0039215697906911373
#0=RGB, 1=BGR
model-color-format=0

model-engine-file=../yolo/facemask_y4tiny_1024_608_fp16.trt
labelfile-path=../yolo/data/obj.names
custom-lib-path=plugin_yolov4/nvdsinfer_custom_impl_Yolo/libnvdsinfer_custom_impl_Yolo.so

## 0=FP32, 1=INT8, 2=FP16 mode
network-mode=2
num-detected-classes=4
gie-unique-id=1
network-type=0
# is-classifier=0
## 0=Group Rectangles, 1=DBSCAN, 2=NMS, 3= DBSCAN+NMS Hybrid, 4 = None(No clustering)
# Default: 2
cluster-mode=2
# Skip inference these frames
maintain-aspect-ratio=0
parse-bbox-func-name=NvDsInferParseCustomYoloV4
engine-create-func-name=NvDsInferYoloCudaEngineGet
scaling-filter=1
scaling-compute-hw=1
#output-blob-names=2012

[class-attrs-all]
nms-iou-threshold=0.2

# Default: 0.4
pre-cluster-threshold=0.4
