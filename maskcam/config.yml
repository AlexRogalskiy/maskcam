# # Recommended params for yolo_tiny
# # For normal videos (without much people/overlapping)
# # we want to filter out false positive detections and rather
# # be certain about whether each person has a mask or not
# 
# nms_threshold: 0.2
# detection_threshold: 0.5
# threshold_vote: 0.9
# tracker.min_hit: 25
# tracker.max_intertia: 60
# 
# # For crowded videos (many people, mainly frontal faces overlapping)
# # where false positives are less of a problem and we want
# # to quickly spot any person without a mask
# 
# nms_threshold: 0.6
# detection_threshold: 0.3
# threshold_vote: 0.5
# tracker.min_hit: 5
# tracker.max_inertia: 40

general:
  output_folder: ../videos/outputs/
  draw_classification: true
  draw_statistics_text: false
  draw_statistics_graphics: true
  draw_panel_faces: true
  inference_period: 1

video:
  input_top: 0
  input_left: 0
  input_width: 0
  input_height: 0

  # # walmart H136, H90 and RPi
  # input_top: 850
  # input_left: 0
  # input_width: 2506
  # input_height: 1398

tracker:
  min_hit: 5
  max_inertia: 40

mobilenetv2:
  # detection_threshold: 0.5
  # nms_threshold: 0.1
  # distance_threshold: 1
  tf_trt_graph: ../mobilenetv2/converted_trt_708_400_bs1.pb
  batch_size: 1
  # From label_map.pbtxt
  label_map: {1: "mask", 2: "no_mask", 3: "not_visible", 4: "misplaced"}

yolo_generic:
  detection_threshold: 0.5
  nms_threshold: 0.1  # Lower values filter more
  distance_threshold: 1

  # Set LD_LIBRARY_PATH accordingly  (e.g: /usr/local/cuda-9.0/lib64)
  yolo_variant: "yolo_darknet_tiny"  # One of the configurations below

yolo_darknet:  # Config specific to original darknet implementation (detector_darknet.py)
  darknet_path: ../yolo/  # Path with libdarknet.so
  config_file: ../yolo/facemask-yolov4.cfg
  data_file: integrations/yolo/obj.data
  weights_file: ../yolo/facemask-yolov4_best.weights

yolo_darknet_tiny:
  darknet_path: ../yolo/  # Path with libdarknet.so
  config_file: ../yolo/facemask-yolov4-tiny.cfg
  data_file: integrations/yolo/obj.data
  # weights_file: ../yolo/facemask-yolov4-tiny_best.weights
  weights_file: ../yolo/backup/facemask-yolov4-tiny_best.weights

yolo_pytorch:
  repo_path: ../yolo/pytorch-YOLOv4
  config_file: ./integrations/yolo/yolov4-facemask.cfg
  names_file: ./integrations/yolo/obj.names
  weights_file: ./yolov4-facemask_best.weights
  use_cuda: true

yolo_trt:
  names_file: ../yolo/data/obj.names
  engine_file: ../../yolo/yolov4_608_608_fp16.trt
  use_cuda: true
  input_width: 608
  input_height: 608
  batch_size: 1

yolo_trt_tiny:
  names_file: ../yolo/data/obj.names
  # engine_file: ../yolo/yolov4-facemask-tiny-fp16.trt
  # engine_file: ../../tensorrt_batch8_fp16.trt
  engine_file: ../../yolo/yolov4_tiny_608_1024_fp16.trt
  use_cuda: true
  input_width: 1024
  input_height: 608
  batch_size: 1
  min_detection_size: 16  # Also see: face_min_size in face_mask_detector

face_mask_detector:
  threshold_vote: 0.5
  extract_faces_step: 5
  face_min_size: 16
  classification_voting: true
  box_no_mask: true
  stat_box_side: "left"
  resolution: ""  # could be "4k", "hd" or nothing
  max_votes: 100
  min_votes: 10

  # Default params
  left_margin: 0
  right_margin: 0
  top_margin: 0
  bottom_margin: 0


debug:
  tracker_enabled: false
  facemask_enabled: false
  output_detector_resolution: true
  draw_tracking_ids: false
  draw_tracking_debug: false
  draw_predictions: false
  draw_detections: true
  draw_face_boxes: false
  profiler: true
